name: Build & Deploy Engine
on: [push, pull_request, workflow_dispatch]
jobs:
#  cleanup:
#    runs-on: self-hosted
#    steps:
#    - name: Cleanup
#      run: rm -rf .* || true
  build:
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        include:
          # Linux build specifically want oldest Ubuntu as possible
          # to be crossdistribution compatible, otherwise use ubuntu-latest
          # - os: ubuntu-22.04
          #   targetos: linux
          #   targetarch: amd64          
          - os: ubuntu-24.04
            targetos: linux
            targetarch: loong64
#           - os: ubuntu-22.04
#             targetos: linux
#             targetarch: i386
#           - os: ubuntu-22.04
#             targetos: linux
#             targetarch: arm64
#             cross: true
#           - os: ubuntu-22.04
#             targetos: linux
#             targetarch: armhf
#             cross: true
#           - os: ubuntu-24.04 # riscv64 would benefit from having latest compilers
#             targetos: linux
#             targetarch: riscv64
#             cross: true
#           - os: ubuntu-22.04
#             targetos: linux
#             targetarch: ppc64el
#             cross: true
# #          - os: ubuntu-aarch64-22.04
# #            targetos: linux
# #            targetarch: aarch64
#           - os: ubuntu-latest
#             targetos: linux
#             targetarch: e2k-8c
#             cross: true
#           - os: ubuntu-latest
#             targetos: android
#             targetarch: multiarch
# #          - os: ubuntu-22.04
# #            targetos: motomagx
# #            targetarch: armv6

#           - os: ubuntu-latest
#             targetos: nswitch
#             targetarch: arm64
#           - os: ubuntu-latest
#             targetos: psvita
#             targetarch: armv7hf
#           - os: windows-latest
#             targetos: win32
#             targetarch: amd64
#           - os: windows-2019 # always use the oldest possible for 32-bit because of older compilers, and better support of certain legacy OSes
#             targetos: win32
#             targetarch: i386
#           - os: macos-14 # arm64 as per github documentation
#             targetos: apple
#             targetarch: arm64
#           - os: macos-13 # x86 as per github documentation (will they fix it before they deprecate this version?..)
#             targetos: apple
#             targetarch: amd64
    env:
      SDL_VERSION: 2.32.0
      GH_CPU_ARCH: ${{ matrix.targetarch }}
      GH_CROSSCOMPILING: ${{ matrix.cross }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - uses: addnab/docker-run-action@v3
      name: Build engine (docker)
      with:
        registry: docker.io
        image: debian:trixie
        options: -v ${{ github.workspace }}:/work --privileged -e GH_CPU_ARCH=${{ env.GH_CPU_ARCH }} -e GH_CROSSCOMPILING=${{ env.GH_CROSSCOMPILING }} -e SDL_VERSION=${{ env.SDL_VERSION }}
        run: |
          cd /work
          sudo apt update
          sudo apt install -y git curl sudo build-essential perl wget
          git config --global --add safe.directory /work
          echo "Running Script"
          bash scripts/gha/deps_${{ matrix.targetos }}.sh
          bash scripts/gha/build_${{ matrix.targetos }}.sh
        
    - name: Upload engine (artifacts)
      uses: actions/upload-artifact@v4
      with:
        name: artifact-${{ matrix.targetos }}-${{ matrix.targetarch }}
        path: artifacts/*
